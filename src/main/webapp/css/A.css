* {
    /* 初始化 清除页面元素的内外边距 */
    padding: 0;
    margin: 0;
    /* 盒子模型 */
    box-sizing: border-box;
}

.start {
    /* text-decoration: none;
    height: 150px;
    text-align: center;
    line-height: 150px; */
    /* position: absolute; */
    /* left: 50%;
    margin-left: -100px;
    top: 50%;
    margin-top: -90px; */
    /* 弹性布局 让子元素称为弹性项目 */
    display: flex;
    /* 让弹性项目垂直排列 原理是改变弹性盒子的主轴方向 父元素就是弹性盒子 现在改变后的主轴方向是向下了 */
    flex-direction: column;
    /* 让弹性项目在交叉轴方向水平居中 现在主轴的方向是向下 交叉轴的方向是与主轴垂直 交叉轴的方向是向右 */
    align-items: center;
    width: 400px;
    padding: 40px;
    /* background-color: rgba(0, 0, 0, 0.2);
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.4); */
}
/*要重写字体大小和颜色(等级不够)*/
a {
    color: #03e9f4;
    font-size: 30px;
    overflow: hidden;
    font-weight: bold;
    text-decoration: none;
    /* height: 180px;
    width: 100px; */
    padding: 10px 20px;
    /* margin: 0 auto; */
    border-radius: 5px;
    /* 同样加个过渡 */
    transition: all 0.5s;
    position: relative;

}
/*方法等级不够,需在主页重写改方法*/
a:hover {
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    background-color: #03e9f4;
    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
}
.ABtn {
    border: none;
    background: none;
    overflow: hidden;
    /*font-size: 30px;*/
    font-weight: bold;
    text-decoration: none;
    /* height: 180px;
    width: 100px; */
    /*padding: 10px 20px;*/
    /* margin: 0 auto; */
    border-radius: 5px;
    /* 同样加个过渡 */
    transition: all 0.5s;
    position: relative;
    /*color: #03e9f4;*/
    color: black;
    font-size: 15px;
}

.ABtn:hover {
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    background-color: #03e9f4;
    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
}

a span {
    position: absolute;
}

/*a span:first-child {*/
/*    top: 0;*/
/*    left: -100%;*/
/*    width: 100%;*/
/*    height: 2px;*/
/*    !* to right 就是往右边 下面的同理 *!*/
/*    background: linear-gradient(to right, transparent, #03e9f4);*/
/*    !* 动画 名称 时长 linear是匀速运动 infinite是无限次运动 *!*/
/*    animation: move1 1s linear infinite;*/
/*}*/
a span:nth-child(2) {
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    /* to right 就是往右边 下面的同理 */
    background: linear-gradient(to right, transparent, #03e9f4);
    /* 动画 名称 时长 linear是匀速运动 infinite是无限次运动 */
    animation: move1 1s linear infinite;
}
a span:nth-child(3) {
    right: 0;
    top: -100%;
    width: 2px;
    height: 100%;
    background: linear-gradient(transparent, #03e9f4);
    /* 这里多了个0.25s其实是延迟时间 */
    animation: move2 1s linear 0.25s infinite;
}

a span:nth-child(4) {
    right: -100%;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(to left, transparent, #03e9f4);
    animation: move3 1s linear 0.5s infinite;
}

a span:last-child {
    left: 0;
    bottom: -100%;
    width: 2px;
    height: 100%;
    background: linear-gradient(#03e9f4, transparent);
    animation: move4 1s linear 0.75s infinite;
}


/* 写一下动画 再坚持一下 视频马上就完了 */

@keyframes move1 {
    0% {
        left: -100%;
    }
    50%,
    100% {
        left: 100%;
    }
}

@keyframes move2 {
    0% {
        top: -100%;
    }
    50%,
    100% {
        top: 100%;
    }
}

@keyframes move3 {
    0% {
        right: -100%;
    }
    50%,
    100% {
        right: 100%;
    }
}

@keyframes move4 {
    0% {
        bottom: -100%;
    }
    50%,
    100% {
        bottom: 100%;
    }
}